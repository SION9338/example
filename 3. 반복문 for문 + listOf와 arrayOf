fun main(){
    for (a in 1..5){
        println(a)
    }
}

//1
//2
//3
//4
//5

----------------------------

fun main(){
    val numbers = arrayOf(1,2,3,4,5)

    for (num in numbers){
        println(num)
    }
}

//1
//2
//3
//4
//5

-----------------------------------

fun main() {
    val names = listOf("Alice", "Bob", "Charlie")

    for (name in names) {
        println(name)
    }
}

// Alice
// Bob
// Charlie

----------------------------------

listOf와 arrayOf는 Kotlin에서 리스트와 배열을 생성하는 두 가지 다른 방법입니다. 이들의 주요 차이점은 다음과 같습니다:

타입:

listOf: List 타입의 불변 리스트를 생성합니다. 리스트의 크기나 요소를 변경할 수 없습니다.
arrayOf: Array 타입의 배열을 생성합니다. 배열의 크기나 요소를 변경할 수 있습니다.
변경 가능성:

listOf: 생성된 리스트는 불변이므로 요소를 추가, 삭제, 변경할 수 없습니다.
arrayOf: 생성된 배열은 가변이므로 요소를 추가, 삭제, 변경할 수 있습니다.

사용 방법:

listOf:
val fruits = listOf("Apple", "Banana", "Orange")

arrayOf:
val numbers = arrayOf(1, 2, 3, 4, 5)

표현 방식:

listOf는 함수 형태로 호출되며, 요소들이 괄호 안에 나열됩니다.
arrayOf는 함수 형태로 호출되며, 요소들이 괄호 안에 나열됩니다.
둘 다 사용될 수 있는 시나리오에 따라 선택하면 됩니다. 만약 요소들을 불변하게 유지하려는 경우나 크기가 변하지 않는 리스트를 원한다면 listOf를 사용하면 됩니다. 반면에 요소들을 변경하거나 크기가 동적으로 변하는 배열을 사용하려면 arrayOf를 사용하면 됩니다.


