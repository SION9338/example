package com.example.countrup

import android.app.Activity
import android.content.Context
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.ColumnScope
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.material3.Button
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember

import androidx.compose.runtime.setValue

import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.sp
import androidx.core.content.edit
import com.example.countrup.ui.theme.CountrUpTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            CountrUpTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    MyButton("click me")
                //                    Greeting("Android")
                }
            }
        }
    }
}

@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    CountrUpTheme {
        Column {
            MyButton("Click Me")
        }

    }
}

@Composable
fun MyButton(name: String) {
    val activity = LocalContext.current as? Activity
    val sharedPref = remember { activity?.getPreferences(Context.MODE_PRIVATE)}
    var count by remember {
        val countvalue = sharedPref?.getInt("counter", 0) ?: 0
        mutableStateOf(countvalue) }
    Column(modifier = Modifier.fillMaxSize()) {
        Button(onClick = {
            if (count < 9999) {
                count += 1
            } else {
                count = 0
            }
        }) {
            Text(text = "${name}, ${count}", fontSize = 16.sp, color = Color.Black)
        }
        Button(onClick = {
            count = 0
        }) {
            Text(text = "초기화", fontSize = 16.sp, color = Color.Red)
        }
        Button(onClick = {
            if (count > 0) {
                count -= 1
            }
        }) {
            Text(text = "감소", fontSize = 16.sp, color = Color.Green)
        }
        Button(onClick = {
            count *= 2
        }) {
            Text(text = "2배로 늘리기", fontSize = 16.sp, color = Color.Blue)
        }
        Button(onClick = {
            count /= 2
        }) {
            Text(text = "반으로 나누기", fontSize = 16.sp, color = Color.Yellow)
        }
    }
}
